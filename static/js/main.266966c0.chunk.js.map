{"version":3,"sources":["GearForm.js","AddItem.js","SearchItem.js","ImportFile.js","GearDisplay.js","Display.js","App.js","reportWebVitals.js","index.js"],"names":["GearForm","props","state","createOption","string","fixed","charAt","toLowerCase","concat","substring","shortened","alphaRegex","RegExp","char","test","value","mainAb","stackAb","map","type","this","gear","headgearAb","clothingAb","shoesAb","push","empty","allowBlank","blank","className","onSubmit","event","handleSubmit","formTitle","name","onChange","handleChange","main","sub1","sub2","sub3","submitText","children","React","Component","AddItem","bind","target","setState","toUpperCase","preventDefault","addGear","window","alert","SearchItem","initialState","resetForm","filterValues","Object","values","initialValues","bool","i","length","setFilter","onClick","ImportFile","file","files","importFile","accept","GearDisplay","selectGear","typeCapitalized","style","selected","color","headers","src","process","alt","Display","gearEntries","gearArray","gearObj","gearSelected","App","showAddItem","showSearchItem","showFileIO","gearFilter","undefined","toggleAddItem","toggleSearchItem","toggleFileIO","resetDatabase","queryDB","removeGear","displayGear","gearName","func","thisArg","openRequest","indexedDB","open","onupgradeneeded","db","result","objectStoreNames","contains","gears","createObjectStore","keyPath","createIndex","unique","onerror","console","error","onsuccess","apply","onblocked","request","transaction","objectStore","add","delete","dataString","reader","FileReader","onload","array","JSON","parse","abort","oncomplete","readAsText","context","keys","headgears","clothing","shoes","index","requestHeadgear","getAll","requestClothing","requestShoes","log","filter","cursorFunction","cursor","subs","includes","continue","openCursor","funcClothing","funcShoes","clear","link","encodeURIComponent","stringify","href","download","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.266966c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass GearForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    static type = [\r\n        'Headgear',\r\n        'Clothing',\r\n        'Shoes'\r\n    ];\r\n\r\n    static stackAb = [\r\n        'Ink Saver (Main)',         \r\n        'Ink Saver (Sub)',\r\n        'Ink Recovery Up',\r\n        'Run Speed Up',\r\n        'Swim Speed Up',\r\n        'Special Charge Up',\r\n        'Special Saver',\r\n        'Special Power Up',\r\n        'Quick Respawn',\r\n        'Quick Super Jump',\r\n        'Sub Power Up',\r\n        'Ink Resistance Up',\r\n        'Bomb Defense Up DX',\r\n        'Main Power Up'\r\n    ];\r\n\r\n    static headgearAb = [\r\n        'Opening Gambit',\r\n        'Last Ditch Effort',\r\n        'Tenacity',\r\n        'Comeback'\r\n    ];\r\n\r\n    static clothingAb = [\r\n        'Ninja Squid',\r\n        'Haunt',\r\n        'Thermal Ink',\r\n        'Respawn Punisher',\r\n        'Ability Doubler'\r\n    ];\r\n\r\n    static shoesAb = [\r\n        'Stealth Jump',\r\n        'Object Shredder',\r\n        'Drop Roller'\r\n    ];\r\n\r\n    static empty = <option key=\"empty\" value=\"empty\">Empty</option>;\r\n    static blank = <option key=\"blank\" value=\"blank\"/>\r\n\r\n    render(){\r\n        function createOption(string) {     // May need to edit how options for dropdown lists are created. Let capitals exist?\r\n            const fixed = string.charAt(0).toLowerCase().concat(string.substring(1));\r\n            \r\n            let shortened = '';\r\n            const alphaRegex = new RegExp('[a-zA-Z]');\r\n    \r\n            for (let char of fixed){\r\n                if (alphaRegex.test(char)){\r\n                    shortened += char;\r\n                }\r\n            }\r\n    \r\n            return (\r\n                <option key={shortened} value={shortened}>{string}</option>\r\n            );\r\n        }\r\n\r\n        let stackAb = GearForm.stackAb.map(createOption);\r\n\r\n        let type = GearForm.type.map(createOption);\r\n\r\n        let mainAb;\r\n        if (this.props.gear.type === 'headgear'){\r\n            mainAb = stackAb.concat(GearForm.headgearAb.map(createOption));\r\n\r\n        } else if (this.props.gear.type === 'clothing'){\r\n            mainAb = stackAb.concat(GearForm.clothingAb.map(createOption));\r\n        \r\n        } else {\r\n            mainAb = stackAb.concat(GearForm.shoesAb.map(createOption));\r\n        }\r\n\r\n        stackAb.push(GearForm.empty);\r\n\r\n        if (this.props.allowBlank){\r\n            mainAb.push(GearForm.blank);\r\n            stackAb.push(GearForm.blank);\r\n            type.push(GearForm.blank);\r\n        }        \r\n\r\n        return (\r\n            <form className=\"Form\" onSubmit={(event) => this.props.handleSubmit(event)}>\r\n                <h1>{this.props.formTitle}</h1>\r\n                \r\n                <div className=\"Form-input\">\r\n                    <label>Type:</label>\r\n                    <select name=\"type\" value={this.props.gear.type} onChange={(event) => this.props.handleChange(event)}>\r\n                        {type}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"Form-input\">\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"name\" value={this.props.gear.name} onChange={(event) => this.props.handleChange(event)}/>\r\n                </div>\r\n                \r\n                <div className=\"Form-input\">\r\n                    <label>Main Abillity:</label>\r\n                    <select className=\"Main-Ab\" name=\"main\" value={this.props.gear.main} onChange={(event) => this.props.handleChange(event)}>\r\n                        {mainAb}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"Form-input\">\r\n                    <label>Sub Abilities:</label>\r\n                    <div className=\"Sub-abilities\">\r\n                        <select className=\"Sub-ab\" name=\"sub1\" value={this.props.gear.sub1} onChange={(event) => this.props.handleChange(event)}>\r\n                            {stackAb}\r\n                        </select>\r\n\r\n                        <select className=\"Sub-ab\" name=\"sub2\" value={this.props.gear.sub2} onChange={(event) => this.props.handleChange(event)}>\r\n                            {stackAb}\r\n                        </select>\r\n\r\n                        <select className=\"Sub-ab\" name=\"sub3\" value={this.props.gear.sub3} onChange={(event) => this.props.handleChange(event)}>\r\n                            {stackAb}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div className=\"Form-submit\">\r\n                    <input type=\"submit\" value={this.props.submitText} />\r\n                    {this.props.children}\r\n                </div>\r\n                \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GearForm;","import React from 'react';\r\nimport GearForm from './GearForm.js';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 'headgear',\r\n            name: '',\r\n            main: 'inkSaverMain',\r\n            sub1: 'empty',\r\n            sub2: 'empty',\r\n            sub3: 'empty'\r\n        };      // State represents a piece of gear.\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);        \r\n    }\r\n\r\n    handleChange(event) {\r\n        if (event.target.name === 'name') {\r\n            this.setState({\r\n                name: event.target.value.toUpperCase()      // Keep text as uppercase.\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.name) {\r\n            this.props.addGear(this.state);\r\n\r\n        } else {\r\n            window.alert(\"Gear has no name.\\nAll gear must have a name.\\nNo gear was added to the database.\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return( \r\n            <GearForm gear={this.state} \r\n                formTitle=\"Add Gear\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.handleSubmit}\r\n                submitText=\"Add\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport GearForm from './GearForm';\r\n\r\nclass SearchItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = SearchItem.initialState;   // State represents a piece of gear.\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.resetForm = this.resetForm.bind(this); \r\n    }\r\n\r\n    static initialState = {\r\n        type: 'blank',\r\n        name: '',\r\n        main: 'blank',\r\n        sub1: 'blank',\r\n        sub2: 'blank',\r\n        sub3: 'blank'\r\n    };\r\n\r\n    handleChange(event){\r\n        if (event.target.name === 'name') {\r\n            this.setState({\r\n                name: event.target.value.toUpperCase()      // Keep text as uppercase.\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        // Check if submitted values are the same as 'blank' values.\r\n        let filterValues = Object.values(this.state);\r\n        let initialValues = Object.values(SearchItem.initialState);\r\n        let bool = true;\r\n\r\n        for (let i = 0; i < initialValues.length; i++){\r\n            bool = bool && filterValues[i] === initialValues[i];\r\n        }\r\n\r\n        if (bool) {\r\n            this.props.setFilter({});\r\n        } else {\r\n            this.props.setFilter(this.state);\r\n        }\r\n    }\r\n\r\n    resetForm(){\r\n        this.setState(SearchItem.initialState);\r\n        this.props.setFilter({});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <GearForm gear={this.state}\r\n                formTitle=\"Search Gear\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.handleSubmit}\r\n                submitText=\"Search\"\r\n                allowBlank={true}>\r\n                <input type=\"button\" onClick={this.resetForm} value=\"Reset\"/>\r\n            </GearForm>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchItem;","import React from 'react';\r\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\r\n\r\nclass ImportFile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(event) {\r\n        if (event.target.files.length > 0) {\r\n            this.setState({\r\n                file: event.target.files[0]     // Does this work? Should be the File object in theory.\r\n            });\r\n        } else {\r\n            this.setState({\r\n                file: null\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.file) {\r\n            this.props.importFile(this.state.file);\r\n        } else {\r\n            window.alert(\"No file selected. No database was imported.\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"Form\" onSubmit={(event) => this.onSubmit(event)}>\r\n                <h1>File IO</h1>\r\n                <div className=\"Form-input\">\r\n                    <label>Select file:</label>\r\n                    <input type=\"file\" accept=\".json\"\r\n                        onChange={(event) => this.onChange(event)}/>\r\n                </div>\r\n\r\n                <div className=\"Form-submit\">\r\n                    <input type=\"submit\" value=\"Import\"/>\r\n                    {this.props.children}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImportFile;","import React from 'react';\r\n\r\nclass GearDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick(){\r\n        this.props.selectGear(this.props.gear.name);\r\n    };\r\n\r\n    render(){\r\n        const selected = {\r\n            color: 'red'\r\n        };\r\n\r\n        const notSelected = {\r\n            color: 'black'\r\n        };\r\n\r\n        const type = this.props.gear.type;\r\n        const typeCapitalized = type.charAt(0).toUpperCase().concat(type.substring(1));\r\n\r\n        return (\r\n            <tr className=\"Gear-display\" style={this.props.selected ? selected : notSelected} onClick={this.onClick}>\r\n                <td className=\"Type-cell\" headers=\"type\">{typeCapitalized}</td>\r\n\r\n                <td className=\"Name-cell\" headers=\"name\">{this.props.gear.name}</td>\r\n\r\n                <td className=\"Ability-cell\" headers=\"main\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.main + \".png\"} alt={this.props.gear.main}/>\r\n                </td>\r\n\r\n                <td className=\"Ability-cell\" headers=\"sub1\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub1 + \".png\"} alt={this.props.gear.sub1}/>\r\n                </td>\r\n\r\n                <td className=\"Ability-cell\" headers=\"sub2\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub2 + \".png\"} alt={this.props.gear.sub2}/>\r\n                </td>\r\n\r\n                <td className=\"Ability-cell\" headers=\"sub3\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub3 + \".png\"} alt={this.props.gear.sub3}/>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GearDisplay;","import './App.css';\r\nimport React from 'react';\r\nimport GearDisplay from './GearDisplay.js';\r\n\r\nclass Display extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        let gearEntries = this.props.gearArray.map((gearObj) =>\r\n            <GearDisplay key={gearObj.name} gear={gearObj}\r\n            selectGear={this.props.selectGear} selected={gearObj.name === this.props.gearSelected}/>);\r\n\r\n        return (\r\n            <table className=\"Display\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"Type-cell\" headers=\"type\">Type</th>\r\n                        <th className=\"Name-cell\" headers=\"name\">Name</th>\r\n                        <th className=\"Ability-cell\" headers=\"main\">Main</th>\r\n                        <th className=\"Ability-cell\" headers=\"sub1\">Sub 1</th>\r\n                        <th className=\"Ability-cell\" headers=\"sub2\">Sub 2</th>\r\n                        <th className=\"Ability-cell\" headers=\"sub3\">Sub 3</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {gearEntries}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import './App.css';\r\nimport AddItem from './AddItem.js';\r\nimport SearchItem from './SearchItem.js';\r\nimport ImportFile from './ImportFile.js';\r\nimport Display from './Display.js';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddItem: false,\r\n            showSearchItem: false,\r\n            showFileIO: false,\r\n            gearFilter: {},\r\n            gearArray: [],\r\n            gearSelected: undefined\r\n        };\r\n\r\n        this.toggleAddItem = this.toggleAddItem.bind(this);\r\n        this.toggleSearchItem = this.toggleSearchItem.bind(this);\r\n        this.toggleFileIO = this.toggleFileIO.bind(this);\r\n        this.selectGear = this.selectGear.bind(this);\r\n        this.resetDatabase = this.resetDatabase.bind(this);\r\n        this.queryDB = this.queryDB.bind(this);\r\n        this.addGear = this.addGear.bind(this);\r\n        this.setFilter = this.setFilter.bind(this);\r\n        this.removeGear = this.removeGear.bind(this);\r\n        this.importFile = this.importFile.bind(this);\r\n        this.displayGear = this.displayGear.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.displayGear();\r\n    }\r\n\r\n    toggleAddItem() {\r\n        this.setState( {\r\n            showAddItem: !this.state.showAddItem,\r\n            showSearchItem: false,\r\n            showFileIO: false\r\n        } );\r\n    }\r\n\r\n    toggleSearchItem(){\r\n        this.setState( {\r\n            showAddItem: false,\r\n            showSearchItem: !this.state.showSearchItem,\r\n            showFileIO: false\r\n        } );\r\n    }\r\n\r\n    toggleFileIO(){\r\n        this.setState( {\r\n            showAddItem: false,\r\n            showSearchItem: false,\r\n            showFileIO: !this.state.showFileIO\r\n        } );\r\n    }\r\n\r\n    selectGear(gearName){\r\n        this.setState( {gearSelected: gearName} );\r\n    }\r\n\r\n    queryDB(func, thisArg) {\r\n        let openRequest = indexedDB.open('database', 1);\r\n    \r\n        openRequest.onupgradeneeded = function(event) {\r\n            let db = openRequest.result;\r\n            if (!db.objectStoreNames.contains('gears')) {\r\n                let gears = db.createObjectStore('gears', {keyPath: 'name'});\r\n                gears.createIndex('nameIndex', 'name', {unique: true});\r\n                gears.createIndex('typeIndex', 'type');\r\n            }\r\n        }\r\n    \r\n        openRequest.onerror = function() {\r\n            console.error('Failed to open database', openRequest.error);\r\n        }\r\n    \r\n        openRequest.onsuccess = function() {\r\n            let db = openRequest.result;\r\n            func.apply(thisArg, [db]);\r\n        }\r\n\r\n        openRequest.onblocked = function() {\r\n            window.alert('Error. Please delete the \"gears\" IndexedDB database.');\r\n        }\r\n    }\r\n\r\n    addGear(gear) {\r\n        let func = function(db) {\r\n            let transaction = db.transaction('gears', 'readwrite');\r\n\r\n            let gears = transaction.objectStore('gears');\r\n\r\n            let request = gears.add(gear);\r\n\r\n            request.onerror = function() {\r\n                window.alert('Cannot add the gear to the database.\\nGear must have unique names.');\r\n            }\r\n\r\n            request.onsuccess = function() {\r\n                window.alert('\"' + gear.name + '\" was added to database.');\r\n            }\r\n        }\r\n\r\n        this.queryDB(func, this);\r\n        this.displayGear();\r\n    }\r\n\r\n    setFilter(gear){\r\n        this.setState(\r\n            {gearFilter: gear},\r\n            () => (this.displayGear())      // Synchronously call displayGear().\r\n        );\r\n    }\r\n\r\n    removeGear() {\r\n        if (this.state.gearSelected) {\r\n            let func = function(db) {\r\n                let gears = db.transaction('gears', 'readwrite').objectStore('gears');\r\n    \r\n                gears.delete(this.state.gearSelected);\r\n    \r\n                window.alert('\"' + this.state.gearSelected + '\" was removed from the database');\r\n                this.setState( {gearSelected: undefined} );\r\n            }\r\n    \r\n            this.queryDB(func, this);\r\n            this.displayGear();\r\n        } else {\r\n            window.alert('No gear was selected.\\nNothing was removed from the database.')\r\n        }\r\n        \r\n    }\r\n\r\n    // TODO: double-check or refine\r\n    importFile(file) {\r\n        // Use FileReader to read the File object.\r\n        let reader = new FileReader();\r\n        let dataString;\r\n        let thisArg = this;\r\n\r\n        reader.onload = function(){\r\n            dataString = reader.result;\r\n\r\n            // Translate from JSON to objects (JSON.parse). Contain in array.\r\n            let array = JSON.parse(dataString);     // Will this be brought over to function?\r\n\r\n            // Clear database.\r\n            thisArg.resetDatabase();\r\n\r\n            // Insert the objects, contained in array. Do within one database-open operation preferably.\r\n            let func = function(db) {\r\n                let transaction = db.transaction('gears', 'readwrite');\r\n                let gears = transaction.objectStore('gears');\r\n\r\n                for (let gear of array) {       // Will the array be brought over? Yes\r\n                    let request = gears.add(gear);\r\n\r\n                    request.onerror = function() {\r\n                        window.alert('Error importing objects into database...');\r\n                        transaction.abort();    // Keep or remove?\r\n                    }\r\n                }\r\n\r\n                transaction.oncomplete = function() {\r\n                    window.alert('Import successful');\r\n                }\r\n            };\r\n\r\n            thisArg.queryDB(func, this);\r\n            thisArg.displayGear();\r\n        };        \r\n        \r\n        reader.readAsText(file); \r\n    }\r\n\r\n    displayGear() {\r\n        let context = this;\r\n        let func;\r\n\r\n        if (Object.keys(this.state.gearFilter).length === 0) {\r\n            func = function(db) {\r\n                let transaction = db.transaction('gears', 'readonly');\r\n                let gears = transaction.objectStore('gears');\r\n                let index = gears.index('typeIndex');\r\n\r\n                let requestHeadgear = index.getAll('headgear');\r\n                let requestClothing = index.getAll('clothing');\r\n                let requestShoes = index.getAll('shoes');\r\n\r\n                let headgears;\r\n                let clothing;\r\n                let shoes;\r\n    \r\n                requestHeadgear.onsuccess = function() {\r\n                    headgears = requestHeadgear.result;\r\n                }\r\n\r\n                requestClothing.onsuccess = function() {\r\n                    clothing = requestClothing.result;\r\n                }\r\n\r\n                requestShoes.onsuccess = function() {\r\n                    shoes = requestShoes.result;\r\n                }\r\n\r\n                transaction.oncomplete = function() {\r\n                    if (headgears && clothing && shoes){\r\n                        let array = headgears.concat(clothing).concat(shoes);\r\n                        context.setState({gearArray: array});\r\n                    \r\n                    } else {\r\n                        console.log('Error retrieving from index.');\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            // Alternatively, just use array.filter(function) on the array produced in the above\r\n            // if code block.\r\n            let filter = this.state.gearFilter;\r\n            let array = [];\r\n\r\n            let cursorFunction = function(request) {\r\n                let cursor = request.result;\r\n                \r\n                if (cursor) {   // A 'hasNext' type of deal.\r\n                    let gear = cursor.value;\r\n                    let subs = [gear.sub1, gear.sub2, gear.sub3];\r\n\r\n                    if (\r\n                        (!filter.name || gear.name.includes(filter.name)) &&\r\n                        (filter.main === 'blank' || gear.main === filter.main) &&\r\n                        (filter.sub1 === 'blank' || subs.includes(filter.sub1)) &&\r\n                        (filter.sub2 === 'blank' || subs.includes(filter.sub2)) &&\r\n                        (filter.sub3 === 'blank' || subs.includes(filter.sub3))\r\n                    ) {\r\n                        array.push(gear);\r\n                    }\r\n\r\n                    cursor.continue();\r\n                }\r\n            }\r\n\r\n            func = function(db) {\r\n                let transaction = db.transaction('gears', 'readonly');\r\n                let gears = transaction.objectStore('gears');\r\n                let index = gears.index('typeIndex');\r\n                \r\n\r\n                if (filter.type === 'blank' || filter.type === 'headgear') {\r\n                    let requestHeadgear = index.openCursor('headgear');\r\n                    requestHeadgear.onsuccess = function() {\r\n                        cursorFunction(requestHeadgear);\r\n                    }\r\n                }\r\n\r\n                transaction.oncomplete = function() {\r\n                    context.queryDB(funcClothing, context);     // \"Sync\" call to clothing cursor.\r\n                }\r\n            }\r\n\r\n            let funcClothing = function(db) {\r\n                let transaction = db.transaction('gears', 'readonly');\r\n                let gears = transaction.objectStore('gears');\r\n                let index = gears.index('typeIndex');\r\n\r\n                if (filter.type === 'blank' || filter.type === 'clothing') {\r\n                    let requestClothing = index.openCursor('clothing');\r\n                    requestClothing.onsuccess = function() {\r\n                        cursorFunction(requestClothing);\r\n                    }\r\n                }\r\n\r\n                transaction.oncomplete = function() {\r\n                    context.queryDB(funcShoes, context);        // \"Sync\" call to shoes cursor.\r\n                }\r\n            }\r\n\r\n            let funcShoes = function(db) {\r\n                let transaction = db.transaction('gears', 'readonly');\r\n                let gears = transaction.objectStore('gears');\r\n                let index = gears.index('typeIndex');\r\n\r\n                if (filter.type === 'blank' || filter.type === 'shoes') {\r\n                    let requestShoes = index.openCursor('shoes');\r\n                    requestShoes.onsuccess = function() {\r\n                        cursorFunction(requestShoes);\r\n                    }\r\n                }\r\n\r\n                transaction.oncomplete = function() {\r\n                    context.setState({gearArray: array});       // Set state.\r\n                }\r\n            }\r\n        }\r\n    \r\n        this.queryDB(func, this);\r\n    }\r\n\r\n    resetDatabase() {\r\n        let func = function(db) {\r\n            let gears = db.transaction('gears', 'readwrite').objectStore('gears');\r\n            gears.clear();\r\n            // indexedDB.deleteDatabase('gears');\r\n        }\r\n\r\n        this.queryDB(func, this);\r\n        this.setState({gearFilter: {}});\r\n        this.displayGear();\r\n    }\r\n  \r\n    render() {\r\n\r\n        // Consider adding a unique identifier code to ensure input file is acceptable?\r\n        // Perhaps made up or unique file extension? Or first object? etc.\r\n        let link = \"data:application/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.state.gearArray));\r\n        \r\n\r\n        // TODO: update export link to a button? perhaps just in CSS style?\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"Tab-header\">\r\n                    <button onClick={this.toggleAddItem}>Add Gear</button>\r\n                    <button onClick={this.toggleSearchItem}>Search Gear</button>\r\n                    <button onClick={this.toggleFileIO}>File IO</button>\r\n                    <button onClick={this.removeGear}>Remove Selected Gear</button>\r\n                    <button onClick={this.resetDatabase}>Resetti Spaghetti</button>\r\n                </div>\r\n                \r\n                <div>\r\n                    {this.state.showAddItem && <AddItem addGear={this.addGear} />}\r\n                    {this.state.showSearchItem && <SearchItem setFilter={this.setFilter} />}\r\n                    {this.state.showFileIO && \r\n                        <div>\r\n                            <ImportFile importFile={this.importFile}>\r\n                                <a href={link} download=\"gearArray.json\">Export as .json</a>\r\n                            </ImportFile>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                \r\n                <Display gearArray={this.state.gearArray} selectGear={this.selectGear} gearSelected={this.state.gearSelected} />\r\n\r\n\r\n                <footer>\r\n                    <p className=\"Status\">\r\n                        This React app is at a stable build. Development may or may not be continuing.\r\n                    </p>\r\n                    <br/>\r\n                    <p className=\"Disclaimer\">\r\n                        This React app is in no way affilated with Nintendo.\r\n                        <br/>\r\n                        All product names, logos, and brands are property of their respective owners.\r\n                    </p>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}