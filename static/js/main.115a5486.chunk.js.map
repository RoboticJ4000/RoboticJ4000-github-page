{"version":3,"sources":["GearForm.js","AddItem.js","SearchItem.js","GearDisplay.js","Display.js","App.js","reportWebVitals.js","index.js"],"names":["GearForm","props","state","createOption","string","fixed","charAt","toLowerCase","concat","substring","shortened","alphaRegex","RegExp","char","test","value","mainAb","stackAb","map","type","this","headgearAb","clothingAb","shoesAb","push","empty","allowBlank","blank","onSubmit","event","handleSubmit","formTitle","name","gear","onChange","handleChange","className","main","sub1","sub2","sub3","submitText","children","React","Component","AddItem","bind","setState","target","preventDefault","addGear","SearchItem","initialState","resetForm","console","log","filterValues","Object","values","initialValues","bool","i","length","setFilter","onClick","GearDisplay","headers","src","process","alt","Display","gearEntries","gearArray","gearObj","App","showAddItem","showSearchItem","gearFilter","toggleAddItem","toggleSearchItem","resetDatabase","queryDB","displayGear","func","thisArg","openRequest","indexedDB","open","onupgradeneeded","db","result","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","onerror","error","onsuccess","apply","request","transaction","objectStore","add","context","keys","getAll","gears","filter","array","openCursor","cursor","subs","includes","continue","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.115a5486.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass GearForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    static type = [\r\n        'Headgear',\r\n        'Clothing',\r\n        'Shoes'\r\n    ];\r\n\r\n    static stackAb = [\r\n        'Ink Saver (Main)',         \r\n        'Ink Saver (Sub)',\r\n        'Ink Recovery Up',\r\n        'Run Speed Up',\r\n        'Swim Speed Up',\r\n        'Special Charge Up',\r\n        'Special Saver',\r\n        'Special Power Up',\r\n        'Quick Respawn',\r\n        'Quick Super Jump',\r\n        'Sub Power Up',\r\n        'Ink Resistance Up',\r\n        'Bomb Defense Up DX',\r\n        'Main Power Up'\r\n    ];\r\n\r\n    static headgearAb = [\r\n        'Opening Gambit',\r\n        'Last Ditch Effort',\r\n        'Tenacity',\r\n        'Comeback'\r\n    ];\r\n\r\n    static clothingAb = [\r\n        'Ninja Squid',\r\n        'Haunt',\r\n        'Thermal Ink',\r\n        'Respawn Punisher',\r\n        'Ability Doubler'\r\n    ];\r\n\r\n    static shoesAb = [\r\n        'Stealth Jump',\r\n        'Object Shredder',\r\n        'Drop Roller'\r\n    ];\r\n\r\n    static empty = <option key=\"empty\" value=\"empty\">Empty</option>;\r\n    static blank = <option key=\"blank\" value=\"blank\"/>\r\n\r\n    render(){\r\n        function createOption(string) {\r\n            const fixed = string.charAt(0).toLowerCase().concat(string.substring(1));\r\n            \r\n            let shortened = '';\r\n            const alphaRegex = new RegExp('[a-zA-Z]');\r\n    \r\n            for (let char of fixed){\r\n                if (alphaRegex.test(char)){\r\n                    shortened += char;\r\n                }\r\n            }\r\n    \r\n            return (\r\n                <option key={shortened} value={shortened}>{string}</option>\r\n            );\r\n        }\r\n\r\n        let stackAb = GearForm.stackAb.map(createOption);\r\n\r\n        let type = GearForm.type.map(createOption);\r\n\r\n        let mainAb;\r\n        if (this.state.type === 'headgear'){\r\n            mainAb = stackAb.concat(GearForm.headgearAb.map(createOption));\r\n\r\n        } else if (this.state.type === 'clothing'){\r\n            mainAb = stackAb.concat(GearForm.clothingAb.map(createOption));\r\n        \r\n        } else {\r\n            mainAb = stackAb.concat(GearForm.shoesAb.map(createOption));\r\n        }\r\n\r\n        stackAb.push(GearForm.empty);\r\n\r\n        if (this.props.allowBlank){\r\n            mainAb.push(GearForm.blank);\r\n            stackAb.push(GearForm.blank);\r\n            type.push(GearForm.blank);\r\n        }        \r\n\r\n        return (\r\n            <form onSubmit={(event) => this.props.handleSubmit(event)}>\r\n                <div>\r\n                    <h1>{this.props.formTitle}</h1>\r\n\r\n                    <label>Type:</label>\r\n                    <select name=\"type\" value={this.props.gear.type} onChange={(event) => this.props.handleChange(event)}>\r\n                        {type}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"name\" value={this.props.gear.name} onChange={(event) => this.props.handleChange(event)}/>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Main Abillity:</label>\r\n                    <select className=\"Main-Ab\" name=\"main\" value={this.props.gear.main} onChange={(event) => this.props.handleChange(event)}>\r\n                        {mainAb}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Sub Abilities:</label>\r\n                    <div className=\"Sub-Abilities\">\r\n                        <select className=\"Sub-Ab\" name=\"sub1\" value={this.props.gear.sub1} onChange={(event) => this.props.handleChange(event)}>\r\n                            {stackAb}\r\n                        </select>\r\n\r\n                        <select className=\"Sub-Ab\" name=\"sub2\" value={this.props.gear.sub2} onChange={(event) => this.props.handleChange(event)}>\r\n                            {stackAb}\r\n                        </select>\r\n\r\n                        <select className=\"Sub-Ab\" name=\"sub3\" value={this.props.gear.sub3} onChange={(event) => this.props.handleChange(event)}>\r\n                            {stackAb}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div>\r\n                    <input type=\"submit\" value={this.props.submitText} />\r\n                    {this.props.children}\r\n                </div>\r\n                \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GearForm;","import React from 'react';\r\nimport GearForm from './GearForm.js';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 'headgear',\r\n            name: '',\r\n            main: 'inkSaverMain',\r\n            sub1: 'empty',\r\n            sub2: 'empty',\r\n            sub3: 'empty'\r\n        };      // State represents a piece of gear.\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);        \r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.addGear(this.state);\r\n    }\r\n\r\n    render(){\r\n        return( \r\n            <GearForm gear={this.state} \r\n                formTitle=\"Add Gear\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.handleSubmit}\r\n                submitText=\"Add\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport GearForm from './GearForm';\r\n\r\nclass SearchItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = SearchItem.initialState;   // State represents a piece of gear.\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.resetForm = this.resetForm.bind(this); \r\n    }\r\n\r\n    static initialState = {\r\n        type: 'blank',\r\n        name: '',\r\n        main: 'blank',\r\n        sub1: 'blank',\r\n        sub2: 'blank',\r\n        sub3: 'blank'\r\n    };\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        \r\n        console.log(this.state);\r\n\r\n        // Check if submitted values are the same as 'blank' values.\r\n        let filterValues = Object.values(this.state);\r\n        let initialValues = Object.values(SearchItem.initialState);\r\n        let bool = true;\r\n\r\n        for (let i = 0; i < initialValues.length; i++){\r\n            bool = bool && filterValues[i] === initialValues[i];\r\n        }\r\n\r\n        if (bool) {\r\n            this.props.setFilter({});\r\n        } else {\r\n            this.props.setFilter(this.state);\r\n        }\r\n    }\r\n\r\n    resetForm(){\r\n        this.setState(SearchItem.initialState);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <GearForm gear={this.state}\r\n                formTitle=\"Search Gear\"\r\n                handleChange={this.handleChange}\r\n                handleSubmit={this.handleSubmit}\r\n                submitText=\"Search\"\r\n                allowBlank={true}>\r\n                <button onClick={this.resetForm}>Reset</button>\r\n            </GearForm>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchItem;","import React from 'react';\r\n\r\nclass GearDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <tr>\r\n                <td headers=\"type\">{this.props.gear.type}</td>\r\n                <td headers=\"name\">{this.props.gear.name}</td>\r\n                <td headers=\"main\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.main + \".png\"} alt={this.props.gear.main}/>\r\n                </td>\r\n                <td headers=\"sub1\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub1 + \".png\"} alt={this.props.gear.sub1}/>\r\n                </td>\r\n                <td headers=\"sub2\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub2 + \".png\"} alt={this.props.gear.sub2}/>\r\n                </td>\r\n                <td headers=\"sub3\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub3 + \".png\"} alt={this.props.gear.sub3}/>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GearDisplay;","import React from 'react';\r\nimport GearDisplay from './GearDisplay.js';\r\n\r\nclass Display extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        let gearEntries = this.props.gearArray.map((gearObj) => <GearDisplay key={gearObj.name} gear={gearObj}/>);\r\n\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th headers=\"type\">Type</th>\r\n                        <th headers=\"name\">Name</th>\r\n                        <th headers=\"main\">Main</th>\r\n                        <th headers=\"sub1\">Sub 1</th>\r\n                        <th headers=\"sub2\">Sub 2</th>\r\n                        <th headers=\"sub3\">Sub 3</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {gearEntries}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import './App.css';\nimport AddItem from './AddItem.js';\nimport SearchItem from './SearchItem.js'\nimport Display from './Display.js';\nimport React from 'react';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddItem: false,\n            showSearchItem: false,\n            gearFilter: {},\n            gearArray: []\n        };\n\n        this.toggleAddItem = this.toggleAddItem.bind(this);\n        this.toggleSearchItem = this.toggleSearchItem.bind(this);\n        this.resetDatabase = this.resetDatabase.bind(this);\n        this.queryDB = this.queryDB.bind(this);\n        this.addGear = this.addGear.bind(this);\n        this.setFilter = this.setFilter.bind(this);\n        this.displayGear = this.displayGear.bind(this);\n    }\n\n    componentDidMount(){\n        this.displayGear();\n    }\n\n    toggleAddItem() {\n        this.setState( {showAddItem: !this.state.showAddItem} );\n    }\n\n    toggleSearchItem(){\n        this.setState( {showSearchItem: !this.state.showSearchItem} );\n    }\n\n    queryDB(func, thisArg) {\n        let openRequest = indexedDB.open('database', 1);\n    \n        openRequest.onupgradeneeded = function(event) {\n            let db = openRequest.result;\n            if (!db.objectStoreNames.contains('gears')) {\n                let gears = db.createObjectStore('gears', {keyPath: 'name'});\n                gears.createIndex('nameIndex', 'name', {unique: true});\n            }\n        }\n    \n        openRequest.onerror = function() {\n            console.error('Failed to open database', openRequest.error);\n        }\n    \n        openRequest.onsuccess = function() {\n            let db = openRequest.result;\n            func.apply(thisArg, [db]);\n        }\n    }\n\n    addGear(gear) {\n        let func = function(db) {\n            let transaction = db.transaction('gears', 'readwrite');\n\n            let gears = transaction.objectStore('gears');\n\n            let request = gears.add(gear);\n\n            request.onerror = function() {\n                console.error('Failed to add gear to database', request.error);\n            }\n\n            request.onsuccess = function() {\n                console.log(gear + ' was added to database');\n            }\n        }\n\n        this.queryDB(func, this);\n        this.displayGear();\n    }\n\n    setFilter(gear){\n        this.setState(\n            {gearFilter: gear},\n            () => (this.displayGear())      // Synchronously call displayGear().\n        );\n    }\n\n    displayGear() {\n        let context = this;\n        let func;\n\n        if (Object.keys(this.state.gearFilter).length === 0) {\n            func = function(db) {\n                let gears = db.transaction('gears', 'readonly').objectStore('gears');\n    \n                let request = gears.getAll();\n    \n                request.onerror = function() {\n                    console.error('Failed to retrieve all gear', request.error);\n                }\n    \n                request.onsuccess = function() {\n                    context.setState({gearArray: request.result});\n                }\n            }\n\n        } else {\n            func = function(db) {\n                let gears = db.transaction('gears', 'readonly').objectStore('gears');\n                \n                let filter = this.state.gearFilter;\n                let array = [];\n\n                let request = gears.openCursor();\n\n                request.onsuccess = function() {    // Called for each cursor item.\n                    let cursor = request.result;\n                    \n                    if (cursor) {   // A 'hasNext' type of deal.\n                        let gear = cursor.value;\n                        let subs = [gear.sub1, gear.sub2, gear.sub3];\n\n                        if (\n                            (filter.type === 'blank' || gear.type === filter.type) &&\n                            (!filter.name || gear.name.includes(filter.name)) &&\n                            (filter.main === 'blank' || gear.main === filter.main) &&\n                            (filter.sub1 === 'blank' || subs.includes(filter.sub1)) &&\n                            (filter.sub2 === 'blank' || subs.includes(filter.sub2)) &&\n                            (filter.sub3 === 'blank' || subs.includes(filter.sub3))\n                        ) {\n                            array.push(gear);\n                        }\n\n                        cursor.continue();\n                    } else {\n                        context.setState({gearArray: array});\n                    }\n                }\n            }\n        }\n    \n        this.queryDB(func, this);\n    }\n\n    resetDatabase() {\n        let func = function(db) {\n            let gears = db.transaction('gears', 'readwrite').objectStore('gears');\n            gears.clear();\n            // indexedDB.deleteDatabase('gears');\n        }\n\n        this.queryDB(func, this);\n        this.setState({gearFilter: {}});\n        this.displayGear();\n    }\n  \n    render() {\n        // TODO: Alerts for each action.\n\n        return (\n            <div className=\"App\">\n                <div>\n                    <button onClick={this.toggleAddItem}>Toggle Add Gear Form</button>\n                    <button onClick={this.toggleSearchItem}>Toggle Search Gear Form</button>\n                    <button onClick={this.resetDatabase}>Resetti Spaghetti</button>\n                </div>\n                \n                <div>\n                    {this.state.showAddItem && <AddItem addGear={this.addGear} />}\n                    {this.state.showSearchItem && <SearchItem setFilter={this.setFilter} />}\n                </div>\n                \n                <Display gearArray={this.state.gearArray} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n/*\n * Notes:\n *  Use js localStorage for data storage\n */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}