{"version":3,"sources":["AddItem.js","GearDisplay.js","Display.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","props","state","type","name","main","sub1","sub2","sub3","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","addGear","createOption","string","fixed","charAt","toLowerCase","concat","substring","shortened","alphaRegex","RegExp","char","test","mainAb","stackAb","map","headgearAb","clothingAb","shoesAb","subAb","isShown","onSubmit","onChange","className","React","Component","GearDisplay","headers","gear","src","process","alt","Display","gearEntries","gearArray","gearObj","App","showAddItem","toggleAddItem","resetDatabase","queryDB","displayGear","deleteRequest","indexedDB","deleteDatabase","onerror","console","error","onsuccess","log","func","thisArg","openRequest","open","onupgradeneeded","db","result","objectStoreNames","contains","gears","createObjectStore","keyPath","createIndex","unique","apply","request","transaction","objectStore","add","context","getAll","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec76ba46.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 'headgear',\r\n            name: '',\r\n            main: 'inkSaverMain',\r\n            sub1: 'empty',\r\n            sub2: 'empty',\r\n            sub3: 'empty'\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    static stackAb = [\r\n        'Ink Saver (Main)',         \r\n        'Ink Saver (Sub)',\r\n        'Ink Recovery Up',\r\n        'Run Speed Up',\r\n        'Swim Speed Up',\r\n        'Special Charge Up',\r\n        'Special Saver',\r\n        'Special Power Up',\r\n        'Quick Respawn',\r\n        'Quick Super Jump',\r\n        'Sub Power Up',\r\n        'Ink Resistance Up',\r\n        'Bomb Defense Up DX',\r\n        'Main Power Up'\r\n    ];\r\n\r\n    static headgearAb = [\r\n        'Opening Gambit',\r\n        'Last Ditch Effort',\r\n        'Tenacity',\r\n        'Comeback'\r\n    ];\r\n\r\n    static clothingAb = [\r\n        'Ninja Squid',\r\n        'Haunt',\r\n        'Thermal Ink',\r\n        'Respawn Punisher',\r\n        'Ability Doubler'\r\n    ];\r\n\r\n    static shoesAb = [\r\n        'Stealth Jump',\r\n        'Object Shredder',\r\n        'Drop Roller'\r\n    ];\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.addGear(this.state);\r\n    }\r\n\r\n    render(){\r\n        function createOption(string) {\r\n            const fixed = string.charAt(0).toLowerCase().concat(string.substring(1));\r\n            \r\n            let shortened = '';\r\n            const alphaRegex = new RegExp('[a-zA-Z]');\r\n    \r\n            for (let char of fixed){\r\n                if (alphaRegex.test(char)){\r\n                    shortened += char;\r\n                }\r\n            }\r\n    \r\n            return (\r\n                <option key={shortened} value={shortened}>{string}</option>\r\n            );\r\n        }\r\n\r\n        const stackAb = AddItem.stackAb.map(createOption);\r\n\r\n        let mainAb;\r\n        if (this.state.type === 'headgear'){\r\n            mainAb = stackAb.concat(AddItem.headgearAb.map(createOption));\r\n\r\n        } else if (this.state.type === 'clothing'){\r\n            mainAb = stackAb.concat(AddItem.clothingAb.map(createOption));\r\n        \r\n        } else {\r\n            mainAb = stackAb.concat(AddItem.shoesAb.map(createOption));\r\n        }\r\n\r\n        const subAb = stackAb.concat(<option key=\"empty\" value=\"empty\">Empty</option>);\r\n\r\n\r\n        /*\r\n         * Form:\r\n         *      Type\r\n         *      Name\r\n         *      Main\r\n         *      Sub\r\n         *      1  2  3\r\n         */\r\n        return (this.props.isShown &&\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <h1>Add Gear</h1>\r\n\r\n                    <label>Type:</label>\r\n                    <select name=\"type\" value={this.state.type} onChange={this.handleChange}>\r\n                        <option key=\"headgear\" value=\"headgear\">Headgear</option>\r\n                        <option key=\"clothing\" value=\"clothing\">Clothing</option>\r\n                        <option key=\"shoes\" value=\"shoes\">Shoes</option>\r\n                    </select>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Main Abillity:</label>\r\n                    <select className=\"Main-Ab\" name=\"main\" value={this.state.main} onChange={this.handleChange}>\r\n                        {mainAb}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Sub Abilities:</label>\r\n                    <div className=\"Sub-Abilities\">\r\n                        <select className=\"Sub-Ab\" name=\"sub1\" value={this.state.sub1} onChange={this.handleChange}>\r\n                            {subAb}\r\n                        </select>\r\n\r\n                        <select className=\"Sub-Ab\" name=\"sub2\" value={this.state.sub2} onChange={this.handleChange}>\r\n                            {subAb}\r\n                        </select>\r\n\r\n                        <select className=\"Sub-Ab\" name=\"sub3\" value={this.state.sub3} onChange={this.handleChange}>\r\n                            {subAb}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div>\r\n                    <input type=\"submit\" value=\"Add\"/>\r\n                </div>\r\n                \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\n\r\nclass GearDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <tr>\r\n                <td headers=\"type\">{this.props.gear.type}</td>\r\n                <td headers=\"name\">{this.props.gear.name}</td>\r\n                <td headers=\"main\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.main + \".png\"} alt={this.props.gear.main}/>\r\n                </td>\r\n                <td headers=\"sub1\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub1 + \".png\"} alt={this.props.gear.sub1}/>\r\n                </td>\r\n                <td headers=\"sub2\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub2 + \".png\"} alt={this.props.gear.sub2}/>\r\n                </td>\r\n                <td headers=\"sub3\">\r\n                    <img src={process.env.PUBLIC_URL + \"/ability_icons/\" + this.props.gear.sub3 + \".png\"} alt={this.props.gear.sub3}/>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GearDisplay;","import React from 'react';\r\nimport GearDisplay from './GearDisplay.js';\r\n\r\nclass Display extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        let gearEntries = this.props.gearArray.map((gearObj) => <GearDisplay key={gearObj.name} gear={gearObj}/>);\r\n\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th headers=\"type\">Type</th>\r\n                        <th headers=\"name\">Name</th>\r\n                        <th headers=\"main\">Main</th>\r\n                        <th headers=\"sub1\">Sub 1</th>\r\n                        <th headers=\"sub2\">Sub 2</th>\r\n                        <th headers=\"sub3\">Sub 3</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {gearEntries}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Display;","import './App.css';\nimport AddItem from './AddItem.js';\nimport Display from './Display.js';\nimport React from 'react';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddItem: false,\n            gearArray: []\n        };\n\n        this.toggleAddItem = this.toggleAddItem.bind(this);\n        this.resetDatabase = this.resetDatabase.bind(this);\n        this.queryDB = this.queryDB.bind(this);\n        this.addGear = this.addGear.bind(this);\n        this.displayGear = this.displayGear.bind(this);\n    }\n\n    componentDidMount(){\n        this.displayGear();\n    }\n\n    toggleAddItem(event) {\n        this.setState( {showAddItem: !this.state.showAddItem} );\n    }\n\n    resetDatabase(event) {\n        let deleteRequest = indexedDB.deleteDatabase('database');\n\n        deleteRequest.onerror = function() {\n            console.error('Failed to delete database', deleteRequest.error);\n        }\n\n        deleteRequest.onsuccess = function() {\n            console.log('Database deleted');\n        }\n\n        this.displayGear();\n    }\n\n    queryDB(func, thisArg) {\n        let openRequest = indexedDB.open('database', 1);\n    \n        openRequest.onupgradeneeded = function(event) {\n            let db = openRequest.result;\n            if (!db.objectStoreNames.contains('gears')) {\n                let gears = db.createObjectStore('gears', {keyPath: 'name'});\n                gears.createIndex('typeIndex', 'type');\n                gears.createIndex('nameIndex', 'name', {unique: true});\n                gears.createIndex('gearsIndex', 'main');\n                gears.createIndex('subIndex', ['sub1', 'sub2', 'sub3']);\n            }\n        }\n    \n        openRequest.onerror = function() {\n            console.error('Failed to open database', openRequest.error);\n        }\n    \n        openRequest.onsuccess = function() {\n            let db = openRequest.result;\n            func.apply(thisArg, [db]);\n        }\n    }\n\n    addGear(gear) {\n        let func = function(db) {\n            let transaction = db.transaction('gears', 'readwrite');\n\n            let gears = transaction.objectStore('gears');\n\n            let request = gears.add(gear);\n\n            request.onerror = function() {\n                console.error('Failed to add gear to database', request.error);\n            }\n\n            request.onsuccess = function() {\n                console.log(gear + ' was added to database');\n            }\n        }\n\n        this.queryDB(func, this);\n        this.displayGear();\n    }\n\n    displayGear() {\n        let context = this;\n\n        let func = function(db) {\n            let gears = db.transaction('gears', 'readonly').objectStore('gears');\n\n            let request = gears.getAll();\n\n            request.onerror = function() {\n                console.error('Failed to retrieve all gear', request.error);\n            }\n\n            request.onsuccess = function() {\n                context.setState({gearArray: request.result});\n            }\n        }\n\n        this.queryDB(func, this);\n    }\n  \n    render() {\n        return (\n            <div className=\"App\">\n                <button onClick={this.toggleAddItem}>Toggle Add Gear Form</button>\n                <button onClick={this.resetDatabase}>Resetti Spaghetti</button>\n                <AddItem isShown={this.state.showAddItem} addGear={this.addGear} />\n                <Display gearArray={this.state.gearArray} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n/*\n * Notes:\n *  Use js localStorage for data storage\n */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}